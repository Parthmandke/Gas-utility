from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.decorators import login_required
from .models import ServiceRequest, RequestUpdate
from .forms import ServiceRequestForm, RequestUpdateForm

@login_required
def create_service_request(request):
    if request.method == 'POST':
        form = ServiceRequestForm(request.POST, request.FILES)
        if form.is_valid():
            service_request = form.save(commit=False)
            service_request.customer = request.user.customer
            service_request.save()
            return redirect('request_detail', pk=service_request.pk)
    else:
        form = ServiceRequestForm()
    return render(request, 'services/create_request.html', {'form': form})

@login_required
def request_detail(request, pk):
    service_request = get_object_or_404(ServiceRequest, pk=pk)
    updates = service_request.updates.all()
    return render(request, 'services/request_detail.html', {'service_request': service_request, 'updates': updates})

@login_required
def update_request(request, pk):
    service_request = get_object_or_404(ServiceRequest, pk=pk)
    if request.method == 'POST':
        form = RequestUpdateForm(request.POST)
        if form.is_valid():
            update = form.save(commit=False)
            update.service_request = service_request
            update.save()
            return redirect('request_detail', pk=service_request.pk)
    else:
        form = RequestUpdateForm()
    return render(request, 'services/update_request.html', {'form': form, 'service_request': service_request})

@login_required
def customer_requests(request):
    service_requests = ServiceRequest.objects.filter(customer=request.user.customer)
    return render(request, 'services/customer_requests.html', {'service_requests': service_requests})

@login_required
def support_dashboard(request):
    service_requests = ServiceRequest.objects.all()
    return render(request, 'services/support_dashboard.html', {'service_requests': service_requests})
